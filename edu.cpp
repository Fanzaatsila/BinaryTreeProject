#include <stdio.h>
#include <conio.h>
#include <windows.h>
int nbtEduCreateTHeader();
int nbtEduCreateT(int time);
int nbtEduInsFsHeader();
int nbtEduInsFs(int time);
int nbtEduInsNbHeader();
int nbtEduInsNb(int time);
int inteduFsToLsHeader();
int eduFsToLs(int time);
int inteduNbToRsHeader();
int eduNbToRs(int time);
int main() {
	int i, time = 300;

	nbtEduCreateT(time);
	system("pause");
	nbtEduInsFs(time);
	system("pause");
	nbtEduInsNb(time);
	system("pause");
	eduFsToLs(time);
	system("pause");
	eduNbToRs(time);
	system("pause");
}

int nbtEduCreateTHeader() {
	system("cls");
	printf("<<<<<<<<<<<<<<<<<< CREATING A TREE >>>>>>>>>>>>>>>>>>\n");
	printf("\n");
}
int nbtEduCreateT(int time ) {
	char root = 'A';

	nbtEduCreateTHeader();
	printf("\t[root]                   \n");
	printf("\n");
	Sleep(time*2);
	nbtEduCreateTHeader();
	printf("\t[root] -                 \n");
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t[root] --                \n");
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t[root] -->               \n");
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t[root] --> NULL          \n");
	printf("\n");
	Sleep(time*2);
	//alokasi node
	nbtEduCreateTHeader();
	printf("\t[root] --> NULL          \n");
	printf("\t                         \n");
	printf("\t[nodeMaker]              \n");
	printf("\n");
	Sleep(time*2);
	nbtEduCreateTHeader();
	printf("\t[root] --> NULL          \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] -            \n");
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t[root] --> NULL          \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --           \n");
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t[root] --> NULL          \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] -->          \n");
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t[root] --> NULL          \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	printf("\n");
	Sleep(time*2);
	//penyambungan node
	nbtEduCreateTHeader();
	printf("\t[root]                   \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t[root]                   \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t[root]                   \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t   [root]                \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t      [root]             \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t         [root]          \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t             [root]      \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t                [root]   \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t                [root]   \n");
	printf("\t                  |      \n");
	printf("\t                         \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t                [root]   \n");
	printf("\t                  |      \n");
	printf("\t                  |      \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	Sleep(time);
	nbtEduCreateTHeader();
	printf("\t                [root]   \n");
	printf("\t                  |      \n");
	printf("\t                  |      \n");
	printf("\t                  V      \n");
	printf("\t[nodeMaker] --> ('%c')   \n",root);
	printf("\n");
	Sleep(time*2);
	//result
	nbtEduCreateTHeader();
	printf("\t         [root]          \n");
	printf("\t           |             \n");
	printf("\t           |             \n");
	printf("\t           V             \n");
	printf("\t         ('%c')          \n",root);
	printf("\n");
	Sleep(time*2);
}

int nbtEduInsFsHeader() {
	system("cls");
	printf("<<<<<<<<<<<<<<<<<< FIRST SON INSERTION >>>>>>>>>>>>>>>>>>\n");
	printf("\n");
}
int nbtEduInsFs(int time) {
	char pr = 'A';
	char fs = 'B';

	nbtEduInsFsHeader();
	printf("\t ...                      \n");
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t('%c') --> ...              \n",pr);
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t NULL                     \n");
	Sleep(time);
	Sleep(time);

	nbtEduInsFsHeader();
	printf("\t[nodeMaker]              \n");
	printf("\t                         \n");
	printf("\t ...                      \n");
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t('%c') --> ...              \n",pr);
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t NULL                     \n");
	Sleep(time);
	Sleep(time);

	nbtEduInsFsHeader();
	printf("\t[nodeMaker] -            \n");
	printf("\t                         \n");
	printf("\t ...                      \n");
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t('%c') --> ...              \n",pr);
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t NULL                     \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[nodeMaker] --           \n");
	printf("\t                         \n");
	printf("\t ...                      \n");
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t('%c') --> ...              \n",pr);
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t NULL                     \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[nodeMaker] -->          \n");
	printf("\t                         \n");
	printf("\t ...                      \n");
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t('%c') --> ...              \n",pr);
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t NULL                     \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[nodeMaker] --> ('%c')      \n",fs);
	printf("\t                         \n");
	printf("\t ...                      \n");
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t('%c') --> ...              \n",pr);
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t NULL                     \n");
	Sleep(time);
	Sleep(time);

	nbtEduInsFsHeader();
	printf("\t[searcher]               \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')      \n",fs);
	printf("\t                         \n");
	printf("\t ...                      \n");
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t('%c') --> ...              \n",pr);
	printf("\t  |                       \n");
	printf("\t  V                       \n");
	printf("\t NULL                     \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[searcher]               \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')      \n",fs);
	printf("\t                         \n");
	printf("\t      ...                      \n");
	printf("\t       |                       \n");
	printf("\t       V                       \n");
	printf("\t     ('%c') --> ...              \n",pr);
	printf("\t       |                       \n");
	printf("\t       V                       \n");
	printf("\t      NULL                     \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[searcher]               \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')      \n",fs);
	printf("\t                         \n");
	printf("\t           ...                      \n");
	printf("\t            |                       \n");
	printf("\t            V                       \n");
	printf("\t          ('%c') --> ...              \n",pr);
	printf("\t            |                       \n");
	printf("\t            V                       \n");
	printf("\t           NULL                     \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[searcher]               \n");
	printf("\t                         \n");
	printf("\t[nodeMaker] --> ('%c')      \n",fs);
	printf("\t                         \n");
	printf("\t                ...                      \n");
	printf("\t                 |                       \n");
	printf("\t                 V                       \n");
	printf("\t               ('%c') --> ...              \n",pr);
	printf("\t                 |                       \n");
	printf("\t                 V                       \n");
	printf("\t                NULL                     \n");
	Sleep(time);
	Sleep(time);

	nbtEduInsFsHeader();
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	printf("\t                              \n");
	printf("\t [searcher]     ...            \n");
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t               ('%c') --> ...   \n",pr);
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t                NULL           \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	printf("\t                              \n");
	printf("\t [searcher] -   ...            \n");
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t               ('%c') --> ...   \n",pr);
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t                NULL           \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	printf("\t                              \n");
	printf("\t [searcher] --  ...            \n");
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t               ('%c') --> ...   \n",pr);
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t                NULL           \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	printf("\t                              \n");
	printf("\t [searcher] --> ...            \n");
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t               ('%c') --> ...   \n",pr);
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t                NULL           \n");
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	printf("\t                              \n");
	printf("\t                ...            \n");
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t[searcher] --> ('%c') --> ...   \n",pr);
	printf("\t                 |             \n");
	printf("\t                 V             \n");
	printf("\t                NULL           \n");
	Sleep(time);
	Sleep(time);

	nbtEduInsFsHeader();
	printf("\t                 ...           \n");
	printf("\t                  |            \n");
	printf("\t                  V            \n");
	printf("\t [searcher] --> ('%c') --> ...  \n",pr);
	printf("\t                  |            \n");
	printf("\t                  V            \n");
	printf("\t   [checker] --> NULL          \n");
	printf("\t                              \n");
	printf("\t                              \n");
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	Sleep(time);
	Sleep(time);
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t                 ...           \n");
	printf("\t                  |            \n");
	printf("\t                  V            \n");
	printf("\t [searcher] --> ('%c') --> ...  \n",pr);
	printf("\t                  |            \n");
	printf("\t                  |            \n");
	printf("\t                              \n");
	printf("\t                              \n");
	printf("\t                              \n");
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t                 ...           \n");
	printf("\t                  |            \n");
	printf("\t                  V            \n");
	printf("\t [searcher] --> ('%c') --> ...  \n",pr);
	printf("\t                  |            \n");
	printf("\t                  |            \n");
	printf("\t                  |            \n");
	printf("\t                              \n");
	printf("\t                              \n");
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t                 ...           \n");
	printf("\t                  |            \n");
	printf("\t                  V            \n");
	printf("\t [searcher] --> ('%c') --> ...  \n",pr);
	printf("\t                  |            \n");
	printf("\t                  |            \n");
	printf("\t                  |            \n");
	printf("\t                  |            \n");
	printf("\t                              \n");
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	Sleep(time);
	nbtEduInsFsHeader();
	printf("\t                 ...           \n");
	printf("\t                  |            \n");
	printf("\t                  V            \n");
	printf("\t [searcher] --> ('%c') --> ...  \n",pr);
	printf("\t                  |            \n");
	printf("\t                  |            \n");
	printf("\t                  |            \n");
	printf("\t                  |            \n");
	printf("\t                  V            \n");
	printf("\t[nodeMaker] --> ('%c')           \n",fs);
	Sleep(time);
	Sleep(time);

	nbtEduInsFsHeader();
	printf("\t ...                           \n");
	printf("\t  |                            \n");
	printf("\t  V                            \n");
	printf("\t('%c') --> ...                  \n",pr);
	printf("\t  |                            \n");
	printf("\t  V                            \n");
	printf("\t('%c')                           \n",fs);
	Sleep(time);
	Sleep(time);
}

int nbtEduInsNbHeader() {
	system("cls");
	printf("<<<<<<<<<<<<<<<<<< NEXT BROTHER INSERTION >>>>>>>>>>>>>>>>>>\n");
	printf("\n");
}
int nbtEduInsNb(int time) {
	char pr = 'A';
	char nb = 'C';

	nbtEduInsNbHeader();
	printf("\t ...\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t('%c') --> ...\n",pr);
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t(...) --> NULL\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t ...\n");
	Sleep(time);
	Sleep(time);

	nbtEduInsNbHeader();
	printf("\t ...\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t('%c') --> ...\n",pr);
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t(...) --> NULL\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t ...\n");
	printf("\t\n");
	printf("\t[nodeMaker]\n");
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t ...\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t('%c') --> ...\n",pr);
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t(...) --> NULL\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] -\n");
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t ...\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t('%c') --> ...\n",pr);
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t(...) --> NULL\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --\n");
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t ...\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t('%c') --> ...\n",pr);
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t(...) --> NULL\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> \n");
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t ...\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t('%c') --> ...\n",pr);
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t(...) --> NULL\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	Sleep(time);

	nbtEduInsNbHeader();
	printf("\t[searcher]\n");
	printf("\t\n");
	printf("\t ...\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t('%c') --> ...\n",pr);
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t(...) --> NULL\n");
	printf("\t  |\n");
	printf("\t  V\n");
	printf("\t ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t[searcher]\n");
	printf("\t\n");
	printf("\t      ...\n");
	printf("\t       |\n");
	printf("\t       V\n");
	printf("\t     ('%c') --> ...\n",pr);
	printf("\t       |\n");
	printf("\t       V\n");
	printf("\t     (...) --> NULL\n");
	printf("\t       |\n");
	printf("\t       V\n");
	printf("\t      ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t[searcher]\n");
	printf("\t\n");
	printf("\t           ...\n");
	printf("\t            |\n");
	printf("\t            V\n");
	printf("\t          ('%c') --> ...\n",pr);
	printf("\t            |\n");
	printf("\t            V\n");
	printf("\t          (...) --> NULL\n");
	printf("\t            |\n");
	printf("\t            V\n");
	printf("\t           ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t[searcher]\n");
	printf("\t\n");
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	Sleep(time);

	nbtEduInsNbHeader();
	printf("\t[searcher]      ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t[searcher] -    ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t[searcher] --   ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t[searcher] -->  ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t               (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t [checker] --> (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	Sleep(time);
	Sleep(time);

	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav]     (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] -   (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --  (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --> (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t[nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --> (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t     [nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --> (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t         [nodeMaker] --> ('%c')\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --> (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t\n");
	printf("\t                         ('%c') <-- [nodeMaker]\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --> (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...\n");
	printf("\t                         ('%c') <-- [nodeMaker]\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --> (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t                ...      ('%c') <-- [nodeMaker]\n",nb);
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --> (...) --> NULL\n");
	printf("\t                 |\n");
	printf("\t                 V       ('%c') <-- [nodeMaker]\n",nb);
	printf("\t                ...  \n");
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --> (...) --> NULL\n");
	printf("\t                 |       ('%c') <-- [nodeMaker]\n",nb);
	printf("\t                 V \n");
	printf("\t                ...\n");
	Sleep(time);
	nbtEduInsNbHeader();
	printf("\t                ...\n");
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t[searcher] --> ('%c') --> ...\n",pr);
	printf("\t                 |\n");
	printf("\t                 V\n");
	printf("\t   [pTrav] --> (...) --> ('%c') <-- [nodeMaker]\n",nb);
	printf("\t                 |   \n");
	printf("\t                 V \n");
	printf("\t                ...\n");
	Sleep(time);
	Sleep(time);

	nbtEduInsNbHeader();
	printf("\t  ...\n");
	printf("\t   |\n");
	printf("\t   V\n");
	printf("\t ('%c') --> ...\n",pr);
	printf("\t   |\n");
	printf("\t   V\n");
	printf("\t (...) --> ('%c') \n",nb);
	printf("\t   |   \n");
	printf("\t   V \n");
	printf("\t  ...\n");
	Sleep(time);
	Sleep(time);
}

int eduFsToLsHeader() {
	system("cls");
	printf("<<<<<<<<<<<<<<<<<< FIRST SON TO LEFT SON >>>>>>>>>>>>>>>>>>\n");
	printf("\n");
}

int eduFsToLs(int time) {
	char pr = 'A',ls = 'B';

	eduFsToLsHeader();
	printf("\t          ('%c') --> ...\n",pr);
	printf("\t            |\n");
	printf("\t            V\n");
	printf("\t          ('%c')\n",ls);
	Sleep(time);
	Sleep(time);

	eduFsToLsHeader();
	printf("\t          ('%c') --> ...\n",pr);
	printf("\t            |\n");
	printf("\t            V\n");
	printf("\t          ('%c')\n",ls);
	printf("\n");
	printf("\t now, '%c' is a first son of '%c'",ls,pr);
	Sleep(time);
	Sleep(time);
	Sleep(time);
	Sleep(time);
	Sleep(time);

	eduFsToLsHeader();
	printf("\t          ('%c') --> ...\n",pr);
	printf("\t            |\n");
	printf("\t            V\n");
	printf("\t          ('%c')\n",ls);
	Sleep(time);
	Sleep(time);

	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t            |____\n");
	printf("\t            |    |\n");
	printf("\t            V    V\n");
	printf("\t          ('%c') ...\n",ls);
	Sleep(time);
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t           _|__\n");
	printf("\t          |    |\n");
	printf("\t          V    V\n");
	printf("\t        ('%c') ...\n",ls);
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|__\n");
	printf("\t         |     |\n");
	printf("\t         V     V\n");
	printf("\t       ('%c')  ...\n",ls);
	printf("\n");
	printf("\t now, '%c' is a left son of '%c'\n",ls,pr);
	Sleep(time);
	Sleep(time);
}

int inteduNbToRsHeader() {
	system("cls");
	printf("<<<<<<<<<<<<<<<<<< NEXT BROTHER TO RIGHT SON >>>>>>>>>>>>>>>>>>\n");
	printf("\n");
}
int eduNbToRs(int time) {
	char pr = 'A',rs = 'C';

	eduFsToLsHeader();
	printf("\t          ('%c') --> (%c)\n",pr,rs);
	printf("\t            |\n");
	printf("\t            V\n");
	printf("\t           ...\n");
	Sleep(time);
	Sleep(time);

	eduFsToLsHeader();
	printf("\t          ('%c') --> (%c)\n",pr,rs);
	printf("\t            |\n");
	printf("\t            V\n");
	printf("\t           ...\n");
	printf("\n");
	printf("\t now, '%c' is a next broher of '%c'",rs,pr);
	Sleep(time);
	Sleep(time);
	Sleep(time);
	Sleep(time);
	Sleep(time);

	eduFsToLsHeader();
	printf("\t          ('%c')     (%c)\n",pr,rs);
	printf("\t          __|\n");
	printf("\t         |    \n");
	printf("\t         V     \n");
	printf("\t        ...  \n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|       (%c)\n",rs);
	printf("\t         |    \n");
	printf("\t         V     \n");
	printf("\t        ...  \n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|      \n");
	printf("\t         |          (%c)\n",rs);
	printf("\t         V     \n");
	printf("\t        ...  \n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|      \n");
	printf("\t         |          \n");
	printf("\t         V          (%c)\n",rs);
	printf("\t        ...  \n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|      \n");
	printf("\t         |          \n");
	printf("\t         V          \n");
	printf("\t        ...         (%c)\n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|      \n");
	printf("\t         |          \n");
	printf("\t         V          \n");
	printf("\t        ...      (%c)\n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|      \n");
	printf("\t         |          \n");
	printf("\t         V          \n");
	printf("\t        ...   (%c)\n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|_     \n");
	printf("\t         |          \n");
	printf("\t         V          \n");
	printf("\t        ...   (%c)\n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|__    \n");
	printf("\t         |          \n");
	printf("\t         V          \n");
	printf("\t        ...   (%c)\n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|__    \n");
	printf("\t         |     |    \n");
	printf("\t         V          \n");
	printf("\t        ...   (%c)\n",rs);
	printf("\n");
	Sleep(time);
	eduFsToLsHeader();
	printf("\t          ('%c')\n",pr);
	printf("\t          __|__    \n");
	printf("\t         |     |    \n");
	printf("\t         V     V    \n");
	printf("\t        ...   (%c)\n",rs);
	printf("\n");
	printf("\t now, '%c' is a right son of '%c'",rs,pr);
	printf("\n");
	Sleep(time);
	Sleep(time);
}
